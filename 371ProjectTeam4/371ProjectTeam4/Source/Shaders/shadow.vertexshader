#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 vertexNormal_modelspace;  // You will need this when you do lighting
layout(location = 2) in vec3 vertexColor; 

// Uniform Inputs
uniform mat4 ViewProjectionTransform;
uniform mat4 WorldTransform;

out vec3 v_color;

void main()
{	
	// Output position of the vertex, in clip space : MVP * position
	vec4 worldPosition = WorldTransform * vec4(vertexPosition_modelspace,1);
	gl_Position =  ViewProjectionTransform * worldPosition;		
	v_color = vertexColor;
}

